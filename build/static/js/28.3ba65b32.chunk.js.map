{"version":3,"sources":["components/@vuexy/projects/tables/advantage/ModalWarning.js","components/@vuexy/projects/tables/advantage/ModalAdd.js","components/@vuexy/projects/tables/advantage/ModalEdit.js","components/@vuexy/projects/tables/advantage/DataTableCustom.js","components/@vuexy/projects/tables/advantage/DataTables.js","views/pages/Pr_advantages.js"],"names":["ModalWarning","show","closeModal","id","deleteProjects","toggleModal","submitForm","e","http","delete","then","res","txt","toast","success","catch","errors","message","warning","Modal","isOpen","toggle","className","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","formSchema","Yup","shape","required","minlength","min","maxlength","max","ModalAdd","closeModalAdd","addProjects","projects","useState","image","project_id","text","post","setPost","preventDefault","data","FormData","append","response","error","initialValues","name","date","validationSchema","touched","onSubmit","Card","CardBody","FormGroup","Label","for","CustomInput","type","onChange","target","value","map","el","index","key","title","Ripple","ModalEdit","closeModalEdit","editProjects","project","useEffect","put","Index","setProjects","modal","setModal","modalAdd","setModalAdd","modalEdit","setModalEdit","setProject","idNews","setIdNews","get","pr_advantages","findIndex","element","splice","act","prevState","CardHeader","CardTitle","Table","responsive","scope","item","findProject","href","url","size","outline","UncontrolledTooltip","placement","DataTables","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","React","Component","Pr_advantages"],"mappings":"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","file":"static/js/28.3ba65b32.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport http from '../../../../../http'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport default function ModalWarning({ show, closeModal, id, deleteProjects }) {\r\n    const notifyWarning = (txt) => toast.warning(txt)\r\n    const notifySuccess = (txt) => toast.success(txt)\r\n    const toggleModal = () => {\r\n        if (show) {\r\n            closeModal(false)\r\n        }\r\n        closeModal(true)\r\n    }\r\n    const submitForm = (e) => {\r\n        deleteProjects(id)\r\n        http.delete(`pr_advantages/delete/${id}`)\r\n            .then((res) => {\r\n                notifySuccess('Преимущества успешно удалена!')\r\n            })\r\n            .catch(function (errors) {\r\n                notifyWarning(`Ошибка: ${errors.message}`)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={show}\r\n                toggle={toggleModal}\r\n                className=\"modal-dialog-centered\"\r\n            >\r\n                <ModalHeader toggle={toggleModal} className=\"bg-danger\">\r\n                    Внимание\r\n                </ModalHeader>\r\n                <ModalBody className=\"modal-dialog-centered\">\r\n                    Вы уверены, что хотите удалить этот проект?\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"danger\"\r\n                        onClick={(e) => {\r\n                            submitForm(e)\r\n                            toggleModal()\r\n                        }}\r\n                    >\r\n                        Удалить\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Card,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n    CustomInput,\r\n} from 'reactstrap'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport '../../../../../assets/scss/plugins/extensions/editor.scss'\r\nimport '../../../../../assets/scss/plugins/extensions/dropzone.scss'\r\nimport http from '../../../../../http'\r\nimport FormData from 'form-data'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    required: Yup.string().required('Required'),\r\n    minlength: Yup.string().min(4, 'Too Short!').required('Required'),\r\n    maxlength: Yup.string().max(5, 'Too Long!').required('Required'),\r\n})\r\n\r\nexport default function ModalAdd({\r\n    show,\r\n    closeModalAdd,\r\n    addProjects,\r\n    projects,\r\n}) {\r\n    const notifySuccess = (txt) => toast.success(txt)\r\n    const notifyError = (txt) => toast.error(txt)\r\n    const [files, setFiles] = useState([])\r\n    const [preloadImg, setpreloadImg] = useState({ image: null })\r\n\r\n    const [post, setPost] = useState({\r\n        project_id: null,\r\n        text: null,\r\n    })\r\n\r\n    const toggleModal = () => {\r\n        if (show) {\r\n            closeModalAdd(false)\r\n        }\r\n        closeModalAdd(true)\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        data.append('project_id', post.project_id)\r\n        data.append('text', post.text)\r\n        http.post('pr_advantages/create', data)\r\n            .then((response) => {\r\n                toggleModal()\r\n                addProjects(post)\r\n                notifySuccess('Преимущества успешно добавлена!')\r\n            })\r\n            .catch(function (errors) {\r\n                notifyError(`Упс, ошибка , ${errors.message}`)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={show}\r\n                toggle={toggleModal}\r\n                className=\"modal-dialog-centered modal-lg\"\r\n            >\r\n                <ModalHeader toggle={toggleModal} className=\"bg-primary\">\r\n                    Добавление проекта\r\n                </ModalHeader>\r\n                <ModalBody className=\"modal-dialog-centered\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            required: '',\r\n                            name: '',\r\n                            date: '',\r\n                            minlength: '',\r\n                            maxlength: '',\r\n                        }}\r\n                        validationSchema={formSchema}\r\n                    >\r\n                        {({ errors, touched }) => (\r\n                            <Form className=\"w-100\" onSubmit={submitForm}>\r\n                                <Card>\r\n                                    <CardBody className=\"rdt_Wrapper\">\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">\r\n                                                Жилой комплекс\r\n                                            </Label>\r\n                                            <CustomInput\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"city\"\r\n                                                onChange={(e) => {\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        project_id:\r\n                                                            e.target.value,\r\n                                                    })\r\n                                                }}\r\n                                            >\r\n                                                <option value=\"\"></option>\r\n                                                {projects?.map((el, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            value={el.id}\r\n                                                            key={index}\r\n                                                        >\r\n                                                            {el.title}\r\n                                                        </option>\r\n                                                    )\r\n                                                })}\r\n                                            </CustomInput>\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">Текст</Label>\r\n                                            <Field\r\n                                                name=\"url\"\r\n                                                id=\"required\"\r\n                                                onChange={(e) =>\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        text: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className={`form-control ${\r\n                                                    errors.required &&\r\n                                                    touched.required &&\r\n                                                    'is-invalid'\r\n                                                }`}\r\n                                            />\r\n                                            {errors.required &&\r\n                                            touched.required ? (\r\n                                                <div className=\"invalid-tooltip mt-25\">\r\n                                                    {errors.required}\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    className=\"mt-2\"\r\n                                >\r\n                                    Добавить\r\n                                </Button.Ripple>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Card,\r\n    CustomInput,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n} from 'reactstrap'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport '../../../../../assets/scss/plugins/extensions/editor.scss'\r\nimport '../../../../../assets/scss/plugins/extensions/dropzone.scss'\r\nimport http from '../../../../../http'\r\nimport FormData from 'form-data'\r\nimport { toast } from 'react-toastify'\r\nimport htmlToDraft from 'html-to-draftjs'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    required: Yup.string().required('Required'),\r\n    minlength: Yup.string().min(4, 'Too Short!').required('Required'),\r\n    maxlength: Yup.string().max(5, 'Too Long!').required('Required'),\r\n})\r\n\r\nexport default function ModalEdit({\r\n    show,\r\n    closeModalEdit,\r\n    editProjects,\r\n    project,\r\n    projects,\r\n}) {\r\n    const notifySuccess = (txt) => toast.success(txt)\r\n    const notifyError = (txt) => toast.error(txt)\r\n    const [post, setPost] = useState({\r\n        id: null,\r\n        project_id: null,\r\n        text: null,\r\n    })\r\n\r\n    useEffect(() => {\r\n        setPost({\r\n            id: project.id,\r\n            project_id: project.project_id,\r\n            text: project.text,\r\n        })\r\n    }, [project])\r\n\r\n    const toggleModal = () => {\r\n        if (show) {\r\n            closeModalEdit(false)\r\n        }\r\n        closeModalEdit(true)\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        data.append('project_id', post.project_id)\r\n        data.append('text', post.text)\r\n        http.put(`pr_advantages/update/${post.id}`, data)\r\n            .then((response) => {\r\n                editProjects(post)\r\n                toggleModal()\r\n                notifySuccess('Преимущества успешно изменено!')\r\n            })\r\n            .catch(function (errors) {\r\n                notifyError(`О нет ошибка , ${errors.message}`)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={show}\r\n                toggle={toggleModal}\r\n                className=\"modal-dialog-centered modal-lg\"\r\n            >\r\n                <ModalHeader toggle={toggleModal} className=\"bg-primary\">\r\n                    Редактирование проекта\r\n                </ModalHeader>\r\n                <ModalBody className=\"modal-dialog-centered\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            required: '',\r\n                            name: '',\r\n                            date: '',\r\n                            minlength: '',\r\n                            maxlength: '',\r\n                        }}\r\n                        validationSchema={formSchema}\r\n                    >\r\n                        {({ errors, touched }) => (\r\n                            <Form className=\"w-100\" onSubmit={submitForm}>\r\n                                <Card>\r\n                                    <CardBody className=\"rdt_Wrapper\">\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">\r\n                                                Жилой комплекс\r\n                                            </Label>\r\n                                            <CustomInput\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"city\"\r\n                                                onChange={(e) => {\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        project_id:\r\n                                                            e.target.value,\r\n                                                    })\r\n                                                }}\r\n                                            >\r\n                                                <option value=\"\"></option>\r\n                                                {projects?.map((el, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            value={el.id}\r\n                                                            key={index}\r\n                                                        >\r\n                                                            {el.title}\r\n                                                        </option>\r\n                                                    )\r\n                                                })}\r\n                                            </CustomInput>\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">Текст</Label>\r\n                                            <Field\r\n                                                name=\"url\"\r\n                                                id=\"required\"\r\n                                                value={post.text}\r\n                                                onChange={(e) =>\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        text: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className={`form-control ${\r\n                                                    errors.required &&\r\n                                                    touched.required &&\r\n                                                    'is-invalid'\r\n                                                }`}\r\n                                            />\r\n                                            {errors.required &&\r\n                                            touched.required ? (\r\n                                                <div className=\"invalid-tooltip mt-25\">\r\n                                                    {errors.required}\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n                                    </CardBody>\r\n                                </Card>\r\n\r\n                                <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    className=\"mt-2\"\r\n                                >\r\n                                    Изменить\r\n                                </Button.Ripple>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Table,\r\n    Input,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardTitle,\r\n    UncontrolledTooltip,\r\n} from 'reactstrap'\r\nimport { Search } from 'react-feather'\r\nimport * as Icon from 'react-feather'\r\nimport ModalWarning from './ModalWarning'\r\nimport ModalAdd from './ModalAdd'\r\nimport ModalEdit from './ModalEdit'\r\nimport http from '../../../../../http'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport Tst from '../../../toastify/Toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../../../../assets/scss/plugins/extensions/toastr.scss'\r\nimport './Index.css'\r\n\r\nexport default function Index() {\r\n    const [post, setPost] = useState([])\r\n    const [projects, setProjects] = useState([])\r\n    const [searchPost, setSearchPost] = useState('')\r\n    const [modal, setModal] = useState(false)\r\n    const [modalAdd, setModalAdd] = useState(false)\r\n    const [modalEdit, setModalEdit] = useState(false)\r\n    const [project, setProject] = useState([])\r\n    const [idNews, setIdNews] = useState()\r\n\r\n    useEffect(() => {\r\n        http.get('/pr_advantages').then((res) => {\r\n            setPost(res.data.pr_advantages)\r\n        })\r\n        http.get('/projects').then((res) => {\r\n            setProjects(res.data.projects)\r\n        })\r\n    }, [])\r\n\r\n    const closeModal = (act) => {\r\n        setModal(false)\r\n    }\r\n\r\n    const addProjects = (el) => {\r\n        setPost((prevState) => [...prevState, { el }])\r\n    }\r\n\r\n    const handleSearchValue = (e) => {\r\n        setSearchPost(e.target.value)\r\n    }\r\n\r\n    const editProjects = (el) => {\r\n        let index = post.findIndex((element) => element.id === el.id)\r\n        post[index].project_id = el.project_id\r\n        post[index].text = el.text\r\n    }\r\n\r\n    const deleteProjects = (id) => {\r\n        let res = post.findIndex((element) => element.id === id)\r\n        post.splice(res, 1)\r\n    }\r\n\r\n    const closeModalAdd = (act) => {\r\n        setModalAdd(false)\r\n    }\r\n    const closeModalEdit = (act) => {\r\n        setModalEdit(false)\r\n    }\r\n\r\n    const findProject = (el) => {\r\n        return projects.map((item, index) => {\r\n            if (item.id === el.project_id) {\r\n                return <div key={index}>{item.title}</div>\r\n            }\r\n            return\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <ModalWarning\r\n                    show={modal}\r\n                    deleteProjects={deleteProjects}\r\n                    closeModal={closeModal}\r\n                    id={idNews}\r\n                />\r\n                <ModalAdd\r\n                    show={modalAdd}\r\n                    addProjects={addProjects}\r\n                    closeModalAdd={closeModalAdd}\r\n                    projects={projects}\r\n                />\r\n                <ModalEdit\r\n                    show={modalEdit}\r\n                    editProjects={editProjects}\r\n                    closeModalEdit={closeModalEdit}\r\n                    project={project}\r\n                    projects={projects}\r\n                />\r\n                <CardHeader>\r\n                    <CardTitle>Контакты</CardTitle>\r\n                </CardHeader>\r\n                <CardBody className=\"rdt_Wrapper\">\r\n                    <Tst />\r\n                    <div className=\"d-flex flex-wrap justify-content-between\">\r\n                        <div className=\"add-new\">\r\n                            <>\r\n                                <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                        setModalAdd(true)\r\n                                    }}\r\n                                >\r\n                                    Добавить новое\r\n                                </Button.Ripple>\r\n                            </>\r\n                        </div>\r\n                        <div className=\"position-relative has-icon-left mb-1\">\r\n                            {/* <Input onChange={handleSearchValue} />\r\n                            <div className=\"form-control-position\">\r\n                                <Search size=\"15\" />\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <Table className=\"table-hover-animation\" responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>Проекты</th>\r\n                                <th>Преимущества ЖК</th>\r\n                                <th>Действия</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {post?.map((el, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td>{findProject(el)}</td>\r\n                                        <td>{el.text} </td>\r\n                                        <td>\r\n                                            <a href={el.url} target=\"_blanck\">\r\n                                                {el.url}\r\n                                            </a>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex\">\r\n                                                <Icon.Edit\r\n                                                    size={20}\r\n                                                    outline\r\n                                                    id=\"positionTop\"\r\n                                                    onClick={() => {\r\n                                                        setModalEdit(true)\r\n                                                        setProject(el)\r\n                                                    }}\r\n                                                />\r\n                                                <UncontrolledTooltip\r\n                                                    placement=\"top\"\r\n                                                    target=\"positionTop\"\r\n                                                >\r\n                                                    Изменить\r\n                                                </UncontrolledTooltip>\r\n                                                <Icon.Trash2\r\n                                                    size={20}\r\n                                                    className=\"ml-2\"\r\n                                                    outline\r\n                                                    id=\"positionBottom\"\r\n                                                    onClick={() => {\r\n                                                        setModal(true)\r\n                                                        setIdNews(el.id)\r\n                                                    }}\r\n                                                />\r\n                                                <UncontrolledTooltip\r\n                                                    placement=\"bottom\"\r\n                                                    target=\"positionBottom\"\r\n                                                >\r\n                                                    Удалить\r\n                                                </UncontrolledTooltip>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport Breadcrumbs from '../../../breadCrumbs/BreadCrumb'\r\nimport DataTableCustom from './DataTableCustom'\r\n\r\nclass DataTables extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Breadcrumbs\r\n                    breadCrumbTitle=\"Контакты\"\r\n                    breadCrumbParent=\"Главная\"\r\n                    breadCrumbActive=\"Контакты\"\r\n                />\r\n                <Row>\r\n                    <Col sm=\"12\">\r\n                        <DataTableCustom />\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataTables\r\n","import React from 'react'\r\nimport Main from '../../components/@vuexy/projects/tables/advantage/DataTables'\r\n\r\nexport default function Pr_advantages() {\r\n    return (\r\n        <>\r\n            <Main />\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}