{"version":3,"sources":["http.js","components/@vuexy/breadCrumbs/BreadCrumb.js","components/@vuexy/pagination/Index.js","../node_modules/reactstrap/es/CardImg.js","components/@vuexy/instagram/get-instagram/ModalAddInsta.js","components/@vuexy/instagram/get-instagram/ModalDeleteInsta.js","components/@vuexy/instagram/get-instagram/ModalEditInsta.js","components/@vuexy/instagram/get-instagram/Index.js","components/@vuexy/instagram/get-instagram/DataInstagram.js","views/pages/Instagram.js"],"names":["http","axios","create","baseURL","headers","Accept","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","React","Component","Index","total","currentPage","onChangeCurrentPage","useState","currentX","setCurrentX","onCurrentPage","page","updateCurrentPage","next","prev","paginatorClassName","number","data","href","disabled","onClick","first","i","push","last","paginators","map","el","propTypes","tagPropType","top","PropTypes","bool","bottom","string","cssModule","object","CardImg","Tag","attributes","_objectWithoutPropertiesLoose","cardImgClassName","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","formSchema","Yup","shape","required","minlength","min","maxlength","max","ModalAddInsta","show","closeModalAdd","addPostInsta","image","preloadImg","setpreloadImg","files","setFiles","urlPostInsta","setUrlPostInsta","file","url","post","setPost","toggleModal","handleInput","e","target","value","handleFileInput","img","URL","createObjectURL","useDropzone","accept","onDrop","acceptedFiles","Object","assign","preview","getRootProps","getInputProps","submitForm","preventDefault","FormData","append","console","log","then","response","txt","toast","success","catch","errors","message","error","useEffect","forEach","revokeObjectURL","Modal","isOpen","toggle","ModalHeader","ModalBody","initialValues","name","date","validationSchema","touched","onSubmit","Card","CardBody","FormGroup","Label","for","id","onChange","src","alt","Button","Ripple","color","type","ModalDeleteInsta","closeModal","deleteInsta","delete","res","warning","ModalFooter","ModalEditInsta","closeModalEdit","editInsta","insta","put","setInsta","modal","setModal","modalAdd","setModalAdd","modalEdit","setModalEdit","pagePost","setPagePost","pagTotal","setPagTotal","idInsta","setIdInsta","get","Instagram","count","onUpdateCurrentPage","a","index","findIndex","element","splice","newPost","prevState","CardHeader","CardTitle","Row","Col","lg","md","key","outline","DataTables","Fragment","sm"],"mappings":"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","file":"static/js/22.c8558d18.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst http = axios.create({\n    baseURL: 'http://tojbackend.web.bobo.tj/api/',\n    headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n    },\n})\n\nexport default http\n","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12 mb-2\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"form-group breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div> */}\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React, { useState } from 'react'\nimport {\n    Pagination,\n    PaginationItem,\n    PaginationLink\n} from \"reactstrap\"\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\nimport './Index.css'\n\nexport default function Index({ total, currentPage, onChangeCurrentPage }) {\n    let [currentX, setCurrentX] = useState(currentPage)\n    const paginators = () => {\n        const data = [\n            <PaginationItem href=\"#\" className=\"prev-item\">\n                <PaginationLink disabled={currentX === 1} onClick={() => { prev() }} href=\"#\" first>\n                    <ChevronLeft />\n                </PaginationLink>\n            </PaginationItem>]\n        for (let i = 1; i <= total; i++) {\n            data.push(\n                <PaginationItem active={currentX === i ? \"active\" : \"\"}>\n                    <PaginationLink className={paginatorClassName(i)} onClick={() => { onCurrentPage(i) }} href=\"#\" >{i}</PaginationLink>\n                </PaginationItem>)\n        }\n        data.push(\n            <PaginationItem href=\"#\" className=\"next-item\">\n                <PaginationLink disabled={currentX === total} onClick={() => { next() }} href=\"#\" last>\n                    <ChevronRight />\n                </PaginationLink>\n            </PaginationItem >)\n        return data\n    }\n    const onCurrentPage = page => {\n        updateCurrentPage(page)\n    }\n    const updateCurrentPage = page => {\n        if (page === currentX) return\n        setCurrentX(page)\n        onChangeCurrentPage(page)\n    }\n    const next = () => {\n        if (currentX === total) {\n            return\n        }\n        const n = currentX + 1\n        updateCurrentPage(n)\n    }\n\n    const prev = () => {\n        if (currentX === 1) {\n            return\n        }\n        const p = currentX - 1\n        updateCurrentPage(p)\n    }\n\n    const paginatorClassName = number => {\n        let className = number === currentX ? 'active' : ''\n        return className\n    }\n\n    return (\n        <>\n            <div className=\"container2\">\n                <ul className=\"d-flex paginate\">\n                    <Pagination className=\"d-flex justify-content-center mt-3\">\n                        {paginators().map(el => el)}\n                    </Pagination>\n                </ul>\n            </div>\n        </>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  top: PropTypes.bool,\n  bottom: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'img'\n};\n\nvar CardImg = function CardImg(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      top = props.top,\n      bottom = props.bottom,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"top\", \"bottom\", \"tag\"]);\n\n  var cardImgClassName = 'card-img';\n\n  if (top) {\n    cardImgClassName = 'card-img-top';\n  }\n\n  if (bottom) {\n    cardImgClassName = 'card-img-bottom';\n  }\n\n  var classes = mapToCssModules(classNames(className, cardImgClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardImg.propTypes = propTypes;\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import React, { useState, useEffect } from 'react'\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody,\n    FormGroup,\n    Label\n} from \"reactstrap\"\nimport {\n    EditorState,\n    convertToRaw,\n    ContentState\n} from \"draft-js\"\nimport draftToHtml from 'draftjs-to-html';\nimport { Editor } from \"react-draft-wysiwyg\"\nimport {\n    Formik,\n    Field,\n    Form\n} from \"formik\"\nimport * as Yup from \"yup\"\nimport { useDropzone } from \"react-dropzone\"\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\"\nimport \"../../../../assets/scss/plugins/extensions/dropzone.scss\"\nimport http from '../../../../http'\nimport FormData from 'form-data'\nimport { toast } from \"react-toastify\"\n\nconst formSchema = Yup.object().shape({\n    required: Yup.string().required(\"Required\"),\n    minlength: Yup.string()\n        .min(4, \"Too Short!\")\n        .required(\"Required\"),\n    maxlength: Yup.string()\n        .max(5, \"Too Long!\")\n        .required(\"Required\")\n})\n\nexport default function ModalAddInsta({ show, closeModalAdd, addPostInsta }) {\n    const notifySuccess = (txt) => toast.success(txt)\n    const notifyError = (txt) => toast.error(txt)\n    const [preloadImg, setpreloadImg] = useState({ image: null })\n    const [files, setFiles] = useState([])\n    const [urlPostInsta, setUrlPostInsta] = useState([])\n    const [imageFile, setImageFile] = useState({\n        file: null\n    })\n    const [post, setPost] = useState({\n        url: null,\n        file: null,\n    })\n\n    const toggleModal = () => {\n        if (show) {\n            closeModalAdd(false)\n        } closeModalAdd(true)\n    }\n\n    const handleInput = e => {\n        setUrlPostInsta(e.target.value)\n    }\n\n    const handleFileInput = (e) => {\n        setPost({ file: e.target.files[0], url: urlPostInsta });\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0];\n            setpreloadImg({\n                image: URL.createObjectURL(img)\n            });\n        }\n    }\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: \"image/*\",\n        onDrop: acceptedFiles => {\n            setFiles(\n                acceptedFiles.map(file =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file)\n                    })\n                )\n            )\n        }\n    })\n\n    const submitForm = (e) => {\n        e.preventDefault()\n        toggleModal()\n        const data = new FormData()\n        data.append('url', post.url);\n        data.append('file', post.file);\n        console.log(post);\n        // addVideo(post)\n\n        http.post('create_insta', data)\n            .then((response) => {\n                addPostInsta(post.url, preloadImg.image)\n                notifySuccess('Пост успешно добавлен!')\n                toggleModal()\n            })\n            .catch(function (errors) {\n                notifyError(`О нет ошибка , ${errors.message}`)\n            })\n    }\n\n    useEffect(\n        () => () => {\n            // Make sure to revoke the data uris to avoid memory leaks\n            files.forEach(file => URL.revokeObjectURL(file.preview))\n        },\n        [files]\n    )\n\n    return (\n        <>\n            <Modal\n                isOpen={show}\n                toggle={toggleModal}\n                className=\"modal-dialog-centered modal-lg\"\n            >\n                <ModalHeader toggle={toggleModal} className=\"bg-primary\">\n                Добавление публикации Instagram\n                </ModalHeader>\n                <ModalBody className=\"modal-dialog-centered\">\n                    <Formik\n                        initialValues={{\n                            required: \"\",\n                            name: \"\",\n                            date: \"\",\n                            minlength: \"\",\n                            maxlength: \"\"\n                        }}\n                        validationSchema={formSchema}\n                    >\n                        {({ errors, touched }) => (\n                            <Form className=\"w-100\" onSubmit={submitForm}>\n\n                                <Card>\n                                    <CardBody className=\"rdt_Wrapper\">\n                                        <FormGroup className=\"my-3\">\n                                            <Label for=\"required\">Ссылка на публикацию</Label>\n                                            <Field\n                                                name=\"title\"\n                                                id=\"required\"\n                                                onChange={handleInput}\n                                                className={`form-control ${errors.required &&\n                                                    touched.required &&\n                                                    \"is-invalid\"}`}\n                                            />\n                                            {errors.required && touched.required ? (\n                                                <div className=\"invalid-tooltip mt-25\">{errors.required}</div>\n                                            ) : null}\n                                        </FormGroup>\n\n                                    </CardBody>\n                                </Card>\n                                <Card>\n                                    <CardBody className=\"rdt_Wrapper\">\n                                        <section>\n                                            <div {...getRootProps({ className: \"dropzone\" })}>\n                                                <input {...getInputProps()} onChange={handleFileInput} />\n                                                <p className=\"mx-1\">\n                                                Перетащите сюда файл или щелкните, чтобы выбрать файл\n                                            </p>\n                                            </div>\n                                            <aside className=\"thumb-container\">\n                                                <div className=\"dz-thumb\">\n                                                    <div className=\"dz-thumb-inner\">\n                                                        {preloadImg.image !== null ? <img src={preloadImg.image} className=\"dz-img\" alt=\"dd\" /> : null}\n                                                    </div>\n                                                </div>\n                                            </aside>\n                                        </section>\n                                    </CardBody>\n                                </Card>\n                                <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\" >\n                                    Добавить\n                                </Button.Ripple>\n                            </Form>\n                        )}\n                    </Formik>\n                </ModalBody>\n            </Modal>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from \"reactstrap\"\nimport http from '../../../../http'\nimport { toast } from \"react-toastify\"\n\nexport default function ModalDeleteInsta({ show, closeModal, id, deleteInsta }) {\n    const notifyWarning = (txt) => toast.warning(txt)\n    const toggleModal = () => {\n        if (show) {\n            closeModal(false)\n        } closeModal(true)\n    }\n    const submitForm = (e) => {\n        http.delete(`delete_insta/${id}`)\n            .then((res) => {\n                notifyWarning('Пост успешно удален!')\n                toggleModal()\n                deleteInsta(id)\n            })\n            .catch(function (errors) {\n                console.log('Ошибка', `${errors.message}`);\n            })\n    }\n    return (\n        <>\n            <Modal\n                isOpen={show}\n                toggle={toggleModal}\n                className=\"modal-dialog-centered\"\n            >\n                <ModalHeader toggle={toggleModal} className=\"bg-danger\">\n                    Внимание\n                </ModalHeader>\n                <ModalBody className=\"modal-dialog-centered\">\n                Вы уверены, что хотите удалить эту публикацию?\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"danger\" onClick={(e) => { submitForm(e); toggleModal() }} >\n                        Удалить\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Card,\n    CardBody,\n    FormGroup,\n    Label\n} from \"reactstrap\"\nimport {\n    Formik,\n    Field,\n    Form\n} from \"formik\"\nimport * as Yup from \"yup\"\nimport { useDropzone } from \"react-dropzone\"\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\"\nimport \"../../../../assets/scss/plugins/extensions/dropzone.scss\"\nimport http from '../../../../http'\nimport FormData from 'form-data'\nimport { toast } from \"react-toastify\"\n\nconst formSchema = Yup.object().shape({\n    required: Yup.string().required(\"Required\"),\n    minlength: Yup.string()\n        .min(4, \"Too Short!\")\n        .required(\"Required\"),\n    maxlength: Yup.string()\n        .max(5, \"Too Long!\")\n        .required(\"Required\")\n})\n\nexport default function ModalEditInsta({ show, closeModalEdit, editInsta, insta }) {\n    const notifySuccess = (txt) => toast.success(txt)\n    const notifyError = (txt) => toast.error(txt)\n    const [files, setFiles] = useState([])\n    const [preloadImg, setpreloadImg] = useState({ image: null })\n    const [imageFile, setImageFile] = useState({\n        file: null\n    })\n\n    const [post, setPost] = useState({\n        id: null,\n        url: null,\n        file: null,\n    })\n\n    useEffect(() => {\n        setPost({\n            id: insta.id,\n            url: insta.url,\n            file: insta.img\n        })\n        setpreloadImg({image: insta.img})\n    }, [insta])\n\n    const toggleModal = () => {\n        if (show) {\n            closeModalEdit(false)\n        } closeModalEdit(true)\n    }\n\n    const handleFileInput = (e) => {\n        setPost({ ...post, file: e.target.files[0] });\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0];\n            setpreloadImg({\n                image: URL.createObjectURL(img)\n            });\n        }\n    }\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: \"image/*\",\n        onDrop: acceptedFiles => {\n            setFiles(\n                acceptedFiles.map(file =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file)\n                    })\n                )\n            )\n        }\n    })\n\n    const submitForm = (e) => {\n        e.preventDefault()\n        const data = new FormData()\n        data.append('url', post.url);\n        data.append('file', post.file);\n        http.put(`update_insta/${insta.id}`, data)\n            .then((response) => {\n                editInsta(post.id, post.url, preloadImg.image)\n                notifySuccess('Пост успешно изменено!')\n                toggleModal()\n            })\n            .catch(function (errors) {\n                notifyError(`О нет ошибка , ${errors.message}`)\n            })\n    }\n\n    useEffect(\n        () => () => {\n            // Make sure to revoke the data uris to avoid memory leaks\n            files.forEach(file => URL.revokeObjectURL(file.preview))\n        },\n        [files]\n    )\n\n    return (\n        <>\n            <Modal\n                isOpen={show}\n                toggle={toggleModal}\n                className=\"modal-dialog-centered modal-lg\"\n            >\n                <ModalHeader toggle={toggleModal} className=\"bg-primary\">\n                Редактирование публикации\n                </ModalHeader>\n                <ModalBody className=\"modal-dialog-centered\">\n                    <Formik\n                        initialValues={{\n                            required: \"\",\n                            name: \"\",\n                            date: \"\",\n                            minlength: \"\",\n                            maxlength: \"\"\n                        }}\n                        validationSchema={formSchema}\n                    >\n                        {({ errors, touched }) => (\n                            <Form className=\"w-100\" onSubmit={submitForm}>\n\n                                <Card>\n                                    <CardBody className=\"rdt_Wrapper\">\n                                        <FormGroup className=\"my-3\">\n                                            <Label for=\"required\">Ссылка на публикацию</Label>\n                                            <Field\n                                                name=\"title\"\n                                                id=\"required\"\n                                                value={post.url}\n                                                onChange={e => setPost({ ...post, url: e.target.value })}\n                                                className={`form-control ${errors.required &&\n                                                    touched.required &&\n                                                    \"is-invalid\"}`}\n                                            />\n                                            {errors.required && touched.required ? (\n                                                <div className=\"invalid-tooltip mt-25\">{errors.required}</div>\n                                            ) : null}\n                                        </FormGroup>\n\n                                    </CardBody>\n                                </Card>\n                                <Card>\n                                    <CardBody className=\"rdt_Wrapper\">\n                                        <section>\n                                            <div {...getRootProps({ className: \"dropzone\" })}>\n                                                <input {...getInputProps()} onChange={handleFileInput} />\n                                                <p className=\"mx-1\">\n                                                Перетащите сюда файл или щелкните, чтобы выбрать файл\n                                                </p>\n                                            </div>\n                                            <aside className=\"thumb-container\">\n                                                <div className=\"dz-thumb\">\n                                                    <div className=\"dz-thumb-inner\">\n                                                        {preloadImg.image !== null ? <img src={preloadImg.image} className=\"dz-img\" alt=\"dd\" /> : null}\n                                                    </div>\n                                                </div>\n                                            </aside>\n                                        </section>\n                                    </CardBody>\n                                </Card>\n                                <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\" >\n                                    Изменить\n                                </Button.Ripple>\n                            </Form>\n                        )}\n                    </Formik>\n                </ModalBody>\n            </Modal>\n\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n    Card,\n    CardBody,\n    CardImg,\n    Row,\n    Col,\n    Button,\n    CardHeader, CardTitle\n} from \"reactstrap\"\nimport http from '../../../../http'\nimport Paginate from '../../pagination/Index'\nimport ModalAdd from './ModalAddInsta'\nimport ModalDeleteInsta from './ModalDeleteInsta'\nimport ModalEdit from './ModalEditInsta'\n\nexport default function Index() {\n    const [insta, setInsta] = useState([])\n    const [post, setPost] = useState([])\n    // const [paginat, setPaginat] = useState([])\n    const [modal, setModal] = useState(false)\n    const [modalAdd, setModalAdd] = useState(false)\n    const [modalEdit, setModalEdit] = useState(false)\n    const [pagePost, setPagePost] = useState(1)\n    const [pagTotal, setPagTotal] = useState()\n    const [idInsta, setIdInsta] = useState()\n\n\n    useEffect(() => {\n        http.get(`get_insta?page=${pagePost}`)\n            .then((response) => {\n                setPost(response.data.Instagram)\n                setPagTotal(response.data.count)\n            })\n    }, [pagePost])\n\n\n    const onUpdateCurrentPage = async (page) => {\n        await setPagePost(page)\n        console.log('async update', page);\n    }\n\n\n    const addPostInsta = (url, img) => {\n        const newPost = {\n            url: url,\n            img: img\n        }\n        setPost(prevState => [...prevState, { ...newPost }]);\n    }\n\n    const deleteInsta = id => {\n        let res = post.findIndex(element => element.id === id)\n          post.splice(res, 1)\n    }\n\n    const editInsta = (id, url, img) => {\n        let index = post.findIndex(element => element.id === id)\n        post[index].url = url\n        post[index].img = img\n    }\n\n    const closeModal = () => {\n        setModal(false)\n    }\n\n    const closeModalAdd = () => {\n        setModalAdd(false)\n    }\n    const closeModalEdit = () => {\n        setModalEdit(false)\n    }\n\n    return (\n        <>\n            <ModalEdit show={modalEdit} editInsta={editInsta} closeModalEdit={closeModalEdit} insta={insta} />\n            <ModalDeleteInsta show={modal} deleteInsta={deleteInsta} closeModal={closeModal} id={idInsta} />\n            <ModalAdd show={modalAdd} addPostInsta={addPostInsta} closeModalAdd={closeModalAdd} />\n            <Card>\n                <CardHeader>\n                    <CardTitle>Инстаграм</CardTitle>\n                </CardHeader>\n                <CardBody className=\"rdt_Wrapper\">\n                    <div className=\"d-flex flex-wrap justify-content-between\">\n                        <div className=\"add-new\">\n                            <Button.Ripple color=\"primary\" onClick={() => { setModalAdd(true) }}>Добавить новое</Button.Ripple>\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n\n            <Row>\n                {\n                    post?.map((el, index) => {\n                        return (\n                            <Col lg=\"4\" md=\"12\" key={index}>\n                                <Card>\n                                    <CardBody>\n                                        <a href={el.url}>\n                                            <CardImg\n                                                className=\"img-fluid mb-2\"\n                                                src={el.img}\n                                                alt=\"card image cap\"\n                                            />\n                                        </a>\n                                        <div className=\"card-btns d-flex mt-2\">\n                                            <Button.Ripple\n                                                onClick={() => { setModalEdit(true); setInsta(el) }}\n                                                color=\"primary\">Изменить</Button.Ripple>\n                                            <Button.Ripple\n                                                className=\"ml-1\"\n                                                color=\"primary\"\n                                                onClick={() => { setModal(true); setIdInsta(el.id) }}\n                                                outline>Удалить</Button.Ripple>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n\n            <Paginate total={pagTotal} currentPage={pagePost} onChangeCurrentPage={onUpdateCurrentPage} />\n        </>\n    )\n}\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../breadCrumbs/BreadCrumb\"\nimport Video from \"./Index\"\n\nclass DataTables extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Breadcrumbs\n                    breadCrumbTitle=\"Instagram\"\n                    breadCrumbParent=\"Главный\"\n                    breadCrumbActive=\"Instagram\"\n                />\n                <Row>\n                    <Col sm=\"12\">\n                        <Video />\n                    </Col>\n                </Row>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default DataTables\n","import React from 'react'\nimport Main from '../../components/@vuexy/instagram/get-instagram/DataInstagram'\n\nexport default function Instagram() {\n    return (\n        <>\n            <Main />\n        </>\n    )\n}\n"],"sourceRoot":""}