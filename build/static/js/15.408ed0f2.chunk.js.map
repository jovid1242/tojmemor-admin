{"version":3,"sources":["http.js","components/@vuexy/breadCrumbs/BreadCrumb.js","components/@vuexy/pagination/Index.js","components/@vuexy/ExtensionHeader.js","components/@vuexy/toastify/ToastTypes.js","components/@vuexy/toastify/ToastPositions.js","components/@vuexy/toastify/Toastify.js","../node_modules/reactstrap/es/Input.js","components/@vuexy/users/tables/data-tables/ModalWarning.js","components/@vuexy/users/tables/data-tables/ModalAdd.js","components/@vuexy/users/tables/data-tables/ModalEdit.js","components/@vuexy/users/tables/data-tables/DataTableCustom.js","components/@vuexy/users/tables/data-tables/DataTables.js","views/pages/Users.js"],"names":["http","axios","create","baseURL","headers","Accept","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","React","Component","Index","total","currentPage","onChangeCurrentPage","useState","currentX","setCurrentX","onCurrentPage","page","updateCurrentPage","next","prev","paginatorClassName","number","data","href","disabled","onClick","first","i","push","last","paginators","map","el","ToastrPositions","Toastr","Fragment","Row","Col","sm","propTypes","children","PropTypes","node","type","string","oneOfType","bsSize","valid","bool","invalid","tagPropType","innerRef","object","func","plaintext","addon","cssModule","Input","_React$Component","_this","call","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","ModalWarning","show","closeModal","id","deleteUser","toggleModal","submitForm","e","delete","then","res","txt","toast","success","catch","errors","message","warning","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","Button","color","formSchema","Yup","shape","required","minlength","min","maxlength","max","ModalAdd","closeModalAdd","addUser","files","setFiles","image","preloadImg","setpreloadImg","name","email","status","file","password","post","setPost","handleFileInput","target","img","URL","createObjectURL","useDropzone","accept","onDrop","acceptedFiles","Object","assign","preview","getRootProps","getInputProps","preventDefault","FormData","append","response","error","useEffect","forEach","revokeObjectURL","initialValues","date","validationSchema","touched","onSubmit","Card","CardBody","FormGroup","Label","for","onChange","value","CustomInput","src","alt","Ripple","ModalEdit","closeModalEdit","editUser","user","put","key","searchPost","setSearchPost","modal","setModal","modalAdd","setModalAdd","modalEdit","setModalEdit","setUser","idNews","setIdNews","pagePost","setPagePost","pagTotal","setPagTotal","get","rows","pages","onUpdateCurrentPage","a","console","log","act","findIndex","element","splice","prevState","index","CardHeader","CardTitle","Table","responsive","filter","val","toLowerCase","includes","text","height","width","UncontrolledTooltip","placement","outline","DataTables","Users"],"mappings":"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","file":"static/js/15.408ed0f2.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst http = axios.create({\n    baseURL: 'http://tojbackend.web.bobo.tj/api/',\n    headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n    },\n})\n// hi\n\nexport default http\n","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12 mb-2\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"form-group breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div> */}\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React, { useState } from 'react'\nimport {\n    Pagination,\n    PaginationItem,\n    PaginationLink\n} from \"reactstrap\"\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\nimport './Index.css'\n\nexport default function Index({ total, currentPage, onChangeCurrentPage }) {\n    let [currentX, setCurrentX] = useState(currentPage)\n    const paginators = () => {\n        const data = [\n            <PaginationItem href=\"#\" className=\"prev-item\">\n                <PaginationLink disabled={currentX === 1} onClick={() => { prev() }} href=\"#\" first>\n                    <ChevronLeft />\n                </PaginationLink>\n            </PaginationItem>]\n        for (let i = 1; i <= total; i++) {\n            data.push(\n                <PaginationItem active={currentX === i ? \"active\" : \"\"}>\n                    <PaginationLink className={paginatorClassName(i)} onClick={() => { onCurrentPage(i) }} href=\"#\" >{i}</PaginationLink>\n                </PaginationItem>)\n        }\n        data.push(\n            <PaginationItem href=\"#\" className=\"next-item\">\n                <PaginationLink disabled={currentX === total} onClick={() => { next() }} href=\"#\" last>\n                    <ChevronRight />\n                </PaginationLink>\n            </PaginationItem >)\n        return data\n    }\n    const onCurrentPage = page => {\n        updateCurrentPage(page)\n    }\n    const updateCurrentPage = page => {\n        if (page === currentX) return\n        setCurrentX(page)\n        onChangeCurrentPage(page)\n    }\n    const next = () => {\n        if (currentX === total) {\n            return\n        }\n        const n = currentX + 1\n        updateCurrentPage(n)\n    }\n\n    const prev = () => {\n        if (currentX === 1) {\n            return\n        }\n        const p = currentX - 1\n        updateCurrentPage(p)\n    }\n\n    const paginatorClassName = number => {\n        let className = number === currentX ? 'active' : ''\n        return className\n    }\n\n    return (\n        <>\n            <div className=\"container2\">\n                <ul className=\"d-flex paginate\">\n                    <Pagination className=\"d-flex justify-content-center mt-3\">\n                        {paginators().map(el => el)}\n                    </Pagination>\n                </ul>\n            </div>\n        </>\n    )\n}\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n    render() {\n        return (\n            <Row className=\"mb-2\">\n                <Col sm=\"12\" className=\"ml-50\">\n                    <p\n                        className=\"font-medium-5 mt-1 extension-title\"\n                        data-tour=\"extension-title\"\n                    >\n                        {this.props.title}\n                    </p>\n                    {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {this.props.subTitle}\n                    </a> : <p className=\"text-primary\">{this.props.subTitle}</p>\n                    }\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ExtensionsHeader\n","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport { toast } from \"react-toastify\"\n\nclass Toastr extends React.Component {\n  notifyDefault = () => toast(\"This is default toast!\")\n  notifySuccess = () => toast.success(\"This is success toast!\")\n  notifyError = () => toast.error(\"This is error toast!\")\n  notifyInfo = () => toast.info(\"This is info toast!\")\n  notifyWarning = () => toast.warning(\"This is warning toast!\")\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Types</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <div className=\"d-inline-block mr-1 mb-1\">\n            <Button.Ripple color=\"primary\" onClick={this.notifyDefault} outline>\n              Default\n            </Button.Ripple>\n          </div>\n          <div className=\"d-inline-block mr-1 mb-1\">\n            <Button.Ripple color=\"success\" onClick={this.notifySuccess} outline>\n              Success\n            </Button.Ripple>\n          </div>\n          <div className=\"d-inline-block mr-1 mb-1\">\n            {\" \"}\n            <Button.Ripple color=\"info\" onClick={this.notifyError} outline>\n              Danger\n            </Button.Ripple>{\" \"}\n          </div>\n          <div className=\"d-inline-block mr-1 mb-1\">\n            <Button.Ripple color=\"warning\" onClick={this.notifyInfo} outline>\n              Info\n            </Button.Ripple>{\" \"}\n          </div>\n          <div className=\"d-inline-block mr-1 mb-1\">\n            <Button.Ripple color=\"danger\" onClick={this.notifyWarning} outline>\n              Warning\n            </Button.Ripple>\n          </div>\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default Toastr\n","import React, { useEffect } from \"react\"\nimport { Button } from \"reactstrap\"\nimport { toast } from \"react-toastify\"\n\nexport default function ToastrPositions() {\n  const notifyTopCenter = () =>\n    toast.info(\"Top Center\", {\n      position: toast.POSITION.TOP_CENTER\n    })\n  return (\n    <div className=\"d-inline-block mr-1 mb-1\">\n      {/* <Button.Ripple\n              color=\"primary\"\n              outline\n              onClick={this.notifyTopCenter}\n            >\n              ok\n            </Button.Ripple> */}\n    </div>\n  )\n}\n","import React from \"react\"\nimport ExtensionsHeader from \"../ExtensionHeader\"\nimport { Row, Col } from \"reactstrap\"\nimport ToastrTypes from \"./ToastTypes\"\nimport ToastrPositions from \"./ToastPositions\"\nimport { ToastContainer } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"../../../assets/scss/plugins/extensions/toastr.scss\"\n\nclass Toastr extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Row>\n          <Col sm=\"12\">\n            <ToastrPositions />\n          </Col>\n          <ToastContainer />\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Toastr\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport http from '../../../../../http'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport default function ModalWarning({ show, closeModal, id, deleteUser }) {\r\n    const notifyWarning = (txt) => toast.warning(txt)\r\n    const notifySuccess = (txt) => toast.success(txt)\r\n    const toggleModal = () => {\r\n        if (show) {\r\n            closeModal(false)\r\n        }\r\n        closeModal(true)\r\n    }\r\n    const submitForm = (e) => {\r\n        deleteUser(id)\r\n        http.delete(`/user/delete/${id}`)\r\n            .then((res) => {\r\n                notifySuccess('Пользователь успешно удален!')\r\n            })\r\n            .catch(function (errors) {\r\n                notifyWarning(`Ошибка , ${errors.message}`)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={show}\r\n                toggle={toggleModal}\r\n                className=\"modal-dialog-centered\"\r\n            >\r\n                <ModalHeader toggle={toggleModal} className=\"bg-danger\">\r\n                    Внимание\r\n                </ModalHeader>\r\n                <ModalBody className=\"modal-dialog-centered\">\r\n                    Вы уверены, что хотите удалить этого пользователя?\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"danger\"\r\n                        onClick={(e) => {\r\n                            submitForm(e)\r\n                            toggleModal()\r\n                        }}\r\n                    >\r\n                        Удалить\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Card,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n    CustomInput,\r\n} from 'reactstrap'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport '../../../../../assets/scss/plugins/extensions/editor.scss'\r\nimport '../../../../../assets/scss/plugins/extensions/dropzone.scss'\r\nimport http from '../../../../../http'\r\nimport FormData from 'form-data'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    required: Yup.string().required('Required'),\r\n    minlength: Yup.string().min(4, 'Too Short!').required('Required'),\r\n    maxlength: Yup.string().max(5, 'Too Long!').required('Required'),\r\n})\r\n\r\nexport default function ModalAdd({ show, closeModalAdd, addUser }) {\r\n    const notifySuccess = (txt) => toast.success(txt)\r\n    const notifyError = (txt) => toast.error(txt)\r\n    const [files, setFiles] = useState([])\r\n    const [preloadImg, setpreloadImg] = useState({ image: null })\r\n\r\n    const [post, setPost] = useState({\r\n        name: null,\r\n        email: null,\r\n        status: null,\r\n        file: null,\r\n        password: null,\r\n    })\r\n\r\n    const toggleModal = () => {\r\n        if (show) {\r\n            closeModalAdd(false)\r\n        }\r\n        closeModalAdd(true)\r\n    }\r\n\r\n    const handleFileInput = (e) => {\r\n        setPost({ ...post, file: e.target.files[0] })\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0]\r\n            setpreloadImg({\r\n                image: URL.createObjectURL(img),\r\n            })\r\n        }\r\n    }\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/*',\r\n        onDrop: (acceptedFiles) => {\r\n            setFiles(\r\n                acceptedFiles.map((file) =>\r\n                    Object.assign(file, {\r\n                        preview: URL.createObjectURL(file),\r\n                    })\r\n                )\r\n            )\r\n        },\r\n    })\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        data.append('name', post.name)\r\n        data.append('email', post.email)\r\n        data.append('password', post.password)\r\n        data.append('status', post.status)\r\n        data.append('image', post.file)\r\n\r\n        http.post('/register', data)\r\n            .then((response) => {\r\n                addUser(post, preloadImg.image)\r\n                toggleModal()\r\n                notifySuccess('Ползователь успешно добавлен!')\r\n            })\r\n            .catch(function (errors) {\r\n                notifyError(`О боже ошибка , ${errors.message}`)\r\n            })\r\n    }\r\n\r\n    useEffect(\r\n        () => () => {\r\n            files.forEach((file) => URL.revokeObjectURL(file.preview))\r\n        },\r\n        [files]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={show}\r\n                toggle={toggleModal}\r\n                className=\"modal-dialog-centered modal-lg\"\r\n            >\r\n                <ModalHeader toggle={toggleModal} className=\"bg-primary\">\r\n                    Добавление пользователя\r\n                </ModalHeader>\r\n                <ModalBody className=\"modal-dialog-centered\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            required: '',\r\n                            name: '',\r\n                            date: '',\r\n                            minlength: '',\r\n                            maxlength: '',\r\n                        }}\r\n                        validationSchema={formSchema}\r\n                    >\r\n                        {({ errors, touched }) => (\r\n                            <Form className=\"w-100\" onSubmit={submitForm}>\r\n                                <Card>\r\n                                    <CardBody className=\"rdt_Wrapper\">\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">Имя</Label>\r\n                                            <Field\r\n                                                name=\"text\"\r\n                                                onChange={(e) =>\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        name: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">E-mail</Label>\r\n                                            <Field\r\n                                                name=\"email\"\r\n                                                id=\"required\"\r\n                                                onChange={(e) =>\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        email: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className={`form-control ${\r\n                                                    errors.required &&\r\n                                                    touched.required &&\r\n                                                    'is-invalid'\r\n                                                }`}\r\n                                            />\r\n                                            {errors.required &&\r\n                                            touched.required ? (\r\n                                                <div className=\"invalid-tooltip mt-25\">\r\n                                                    {errors.required}\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">Пароль</Label>\r\n                                            <Field\r\n                                                name=\"password\"\r\n                                                id=\"required\"\r\n                                                onChange={(e) =>\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        password:\r\n                                                            e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className={`form-control ${\r\n                                                    errors.required &&\r\n                                                    touched.required &&\r\n                                                    'is-invalid'\r\n                                                }`}\r\n                                            />\r\n                                            {errors.required &&\r\n                                            touched.required ? (\r\n                                                <div className=\"invalid-tooltip mt-25\">\r\n                                                    {errors.required}\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">Рол</Label>\r\n                                            <CustomInput\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"city\"\r\n                                                onChange={(e) => {\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        status: e.target.value,\r\n                                                    })\r\n                                                }}\r\n                                            >\r\n                                                <option value=\"-1\"></option>\r\n                                                <option value=\"admin\">\r\n                                                    Админ\r\n                                                </option>\r\n                                                <option value=\"manager\">\r\n                                                    Менеджер\r\n                                                </option>\r\n                                            </CustomInput>\r\n                                        </FormGroup>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Card>\r\n                                    <CardBody className=\"rdt_Wrapper\">\r\n                                        <section>\r\n                                            <div\r\n                                                {...getRootProps({\r\n                                                    className: 'dropzone',\r\n                                                })}\r\n                                            >\r\n                                                <input\r\n                                                    {...getInputProps()}\r\n                                                    onChange={handleFileInput}\r\n                                                />\r\n                                                <p className=\"mx-1\">\r\n                                                    Перетащите сюда файл или\r\n                                                    щелкните, чтобы выбрать файл\r\n                                                </p>\r\n                                            </div>\r\n                                            <aside className=\"thumb-container\">\r\n                                                <div className=\"dz-thumb\">\r\n                                                    <div className=\"dz-thumb-inner\">\r\n                                                        {preloadImg.image !==\r\n                                                        null ? (\r\n                                                            <img\r\n                                                                src={\r\n                                                                    preloadImg.image\r\n                                                                }\r\n                                                                className=\"dz-img\"\r\n                                                                alt=\"dd\"\r\n                                                            />\r\n                                                        ) : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </aside>\r\n                                        </section>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    className=\"mt-2\"\r\n                                >\r\n                                    Добавить\r\n                                </Button.Ripple>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Card,\r\n    CardHeader,\r\n    CustomInput,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n} from 'reactstrap'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport '../../../../../assets/scss/plugins/extensions/editor.scss'\r\nimport '../../../../../assets/scss/plugins/extensions/dropzone.scss'\r\nimport http from '../../../../../http'\r\nimport FormData from 'form-data'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    required: Yup.string().required('Required'),\r\n    minlength: Yup.string().min(4, 'Too Short!').required('Required'),\r\n    maxlength: Yup.string().max(5, 'Too Long!').required('Required'),\r\n})\r\n\r\nexport default function ModalEdit({ show, closeModalEdit, editUser, user }) {\r\n    const notifySuccess = (txt) => toast.success(txt)\r\n    const notifyError = (txt) => toast.error(txt)\r\n    const [files, setFiles] = useState([])\r\n    const [preloadImg, setpreloadImg] = useState({ image: null })\r\n\r\n    const [post, setPost] = useState({\r\n        id: null,\r\n        name: null,\r\n        email: null,\r\n        status: null,\r\n        file: null,\r\n    })\r\n\r\n    useEffect(() => {\r\n        setPost({\r\n            id: user.id,\r\n            name: user.name,\r\n            email: user.email,\r\n            status: user.status,\r\n            file: user.image,\r\n        })\r\n        setpreloadImg({ image: user.image })\r\n    }, [user])\r\n\r\n    const toggleModal = () => {\r\n        if (show) {\r\n            closeModalEdit(false)\r\n        }\r\n        closeModalEdit(true)\r\n    }\r\n    const handleFileInput = (e) => {\r\n        setPost({ ...post, file: e.target.files[0] })\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0]\r\n            setpreloadImg({\r\n                image: URL.createObjectURL(img),\r\n            })\r\n        }\r\n    }\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/*',\r\n        onDrop: (acceptedFiles) => {\r\n            setFiles(\r\n                acceptedFiles.map((file) =>\r\n                    Object.assign(file, {\r\n                        preview: URL.createObjectURL(file),\r\n                    })\r\n                )\r\n            )\r\n        },\r\n    })\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        data.append('name', post.name)\r\n        data.append('email', post.email)\r\n        data.append('status', post.status)\r\n        data.append('image', post.file)\r\n        http.put(`/user/update/${post.id}`, data)\r\n            .then((response) => {\r\n                toggleModal()\r\n                editUser(post, preloadImg.image)\r\n                notifySuccess('Ползователь успешно изменено!')\r\n            })\r\n            .catch(function (errors) {\r\n                notifyError(`О нет, ${errors.message}`)\r\n            })\r\n    }\r\n\r\n    const thumbs = files.map((file) => (\r\n        <div className=\"dz-thumb\" key={file.name}>\r\n            <div className=\"dz-thumb-inner\">\r\n                <img src={file.preview} className=\"dz-img\" alt={file.name} />\r\n            </div>\r\n        </div>\r\n    ))\r\n\r\n    useEffect(\r\n        () => () => {\r\n            // Make sure to revoke the data uris to avoid memory leaks\r\n            files.forEach((file) => URL.revokeObjectURL(file.preview))\r\n        },\r\n        [files]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={show}\r\n                toggle={toggleModal}\r\n                className=\"modal-dialog-centered modal-lg\"\r\n            >\r\n                <ModalHeader toggle={toggleModal} className=\"bg-primary\">\r\n                    Редактирование пользователя\r\n                </ModalHeader>\r\n                <ModalBody className=\"modal-dialog-centered\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            required: '',\r\n                            name: '',\r\n                            date: '',\r\n                            minlength: '',\r\n                            maxlength: '',\r\n                        }}\r\n                        validationSchema={formSchema}\r\n                    >\r\n                        {({ errors, touched }) => (\r\n                            <Form className=\"w-100\" onSubmit={submitForm}>\r\n                                <Card>\r\n                                    <CardBody className=\"rdt_Wrapper\">\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">Имя</Label>\r\n                                            <Field\r\n                                                name=\"text\"\r\n                                                value={post.name}\r\n                                                onChange={(e) =>\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        name: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">E-mail</Label>\r\n                                            <Field\r\n                                                name=\"email\"\r\n                                                id=\"required\"\r\n                                                value={post.email}\r\n                                                onChange={(e) =>\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        email: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className={`form-control ${\r\n                                                    errors.required &&\r\n                                                    touched.required &&\r\n                                                    'is-invalid'\r\n                                                }`}\r\n                                            />\r\n                                            {errors.required &&\r\n                                            touched.required ? (\r\n                                                <div className=\"invalid-tooltip mt-25\">\r\n                                                    {errors.required}\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup className=\"my-3\">\r\n                                            <Label for=\"required\">Рол</Label>\r\n                                            <CustomInput\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"city\"\r\n                                                value={post.status}\r\n                                                onChange={(e) => {\r\n                                                    setPost({\r\n                                                        ...post,\r\n                                                        status: e.target.value,\r\n                                                    })\r\n                                                }}\r\n                                            >\r\n                                                <option value=\"-1\"></option>\r\n                                                <option value=\"admin\">\r\n                                                    Админ\r\n                                                </option>\r\n                                                <option value=\"manager\">\r\n                                                    Менеджер\r\n                                                </option>\r\n                                            </CustomInput>\r\n                                        </FormGroup>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Card>\r\n                                    <CardBody className=\"rdt_Wrapper\">\r\n                                        <section>\r\n                                            <div\r\n                                                {...getRootProps({\r\n                                                    className: 'dropzone',\r\n                                                })}\r\n                                            >\r\n                                                <input\r\n                                                    {...getInputProps()}\r\n                                                    onChange={handleFileInput}\r\n                                                />\r\n                                                <p className=\"mx-1\">\r\n                                                    Перетащите сюда файл или\r\n                                                    щелкните, чтобы выбрать файл\r\n                                                </p>\r\n                                            </div>\r\n                                            <aside className=\"thumb-container\">\r\n                                                <div className=\"dz-thumb\">\r\n                                                    <div className=\"dz-thumb-inner\">\r\n                                                        {preloadImg.image !==\r\n                                                        null ? (\r\n                                                            <img\r\n                                                                src={\r\n                                                                    preloadImg.image\r\n                                                                }\r\n                                                                className=\"dz-img\"\r\n                                                                alt=\"dd\"\r\n                                                            />\r\n                                                        ) : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </aside>\r\n                                        </section>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    className=\"mt-2\"\r\n                                >\r\n                                    Изменить\r\n                                </Button.Ripple>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Table,\r\n    Input,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardTitle,\r\n    UncontrolledTooltip,\r\n} from 'reactstrap'\r\nimport { Search } from 'react-feather'\r\nimport * as Icon from 'react-feather'\r\nimport ModalWarning from './ModalWarning'\r\nimport ModalAdd from './ModalAdd'\r\nimport ModalEdit from './ModalEdit'\r\nimport Paginate from '../../../pagination/Index'\r\nimport http from '../../../../../http'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport Tst from '../../../toastify/Toastify'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../../../../assets/scss/plugins/extensions/toastr.scss'\r\nimport './Index.css'\r\n\r\nexport default function Index() {\r\n    const [post, setPost] = useState([])\r\n    const [searchPost, setSearchPost] = useState('')\r\n    const [modal, setModal] = useState(false)\r\n    const [modalAdd, setModalAdd] = useState(false)\r\n    const [modalEdit, setModalEdit] = useState(false)\r\n    const [user, setUser] = useState([])\r\n    const [idNews, setIdNews] = useState()\r\n\r\n    const closeModal = (act) => {\r\n        setModal(false)\r\n    }\r\n\r\n    const addUser = (el, file) => {\r\n        setPost((prevState) => [\r\n            ...prevState,\r\n            {\r\n                name: el.name,\r\n                email: el.email,\r\n                password: el.password,\r\n                status: el.status,\r\n                image: file,\r\n            },\r\n        ])\r\n    }\r\n\r\n    const handleSearchValue = (e) => {\r\n        setSearchPost(e.target.value)\r\n    }\r\n\r\n    const deleteUser = (id) => {\r\n        let res = post.findIndex((element) => element.id === id)\r\n        post.splice(res, 1)\r\n    }\r\n\r\n    const editUser = (el, file) => {\r\n        let index = post.findIndex((element) => element.id === el.id)\r\n        post[index].name = el.name\r\n        post[index].email = el.email\r\n        post[index].status = el.status\r\n        if (file === null) {\r\n            post[index].image = el.file\r\n        } else {\r\n            post[index].image = file\r\n        }\r\n    }\r\n\r\n    const closeModalAdd = (act) => {\r\n        setModalAdd(false)\r\n    }\r\n    const closeModalEdit = (act) => {\r\n        setModalEdit(false)\r\n    }\r\n\r\n    const [pagePost, setPagePost] = useState(1)\r\n    const [pagTotal, setPagTotal] = useState()\r\n    useEffect(() => {\r\n        http.get(`get_users?page=${pagePost}`).then((response) => {\r\n            setPost(response.data.user.rows)\r\n            setPagTotal(response.data.pages)\r\n        })\r\n    }, [pagePost])\r\n\r\n    const onUpdateCurrentPage = async (page) => {\r\n        await setPagePost(page)\r\n        console.log('async update', page)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <ModalWarning\r\n                    show={modal}\r\n                    closeModal={closeModal}\r\n                    id={idNews}\r\n                    deleteUser={deleteUser}\r\n                />\r\n                <ModalAdd\r\n                    show={modalAdd}\r\n                    addUser={addUser}\r\n                    closeModalAdd={closeModalAdd}\r\n                />\r\n                <ModalEdit\r\n                    show={modalEdit}\r\n                    editUser={editUser}\r\n                    closeModalEdit={closeModalEdit}\r\n                    user={user}\r\n                />\r\n                <CardHeader>\r\n                    <CardTitle>Ползователи</CardTitle>\r\n                </CardHeader>\r\n                <CardBody className=\"rdt_Wrapper\">\r\n                    <Tst />\r\n                    <div className=\"d-flex flex-wrap justify-content-between\">\r\n                        <div className=\"add-new\">\r\n                            <>\r\n                                <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                        setModalAdd(true)\r\n                                    }}\r\n                                >\r\n                                    Добавить новое\r\n                                </Button.Ripple>\r\n                            </>\r\n                        </div>\r\n                        <div className=\"position-relative has-icon-left mb-1\">\r\n                            <Input onChange={handleSearchValue} />\r\n                            <div className=\"form-control-position\">\r\n                                <Search size=\"15\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Table className=\"table-hover-animation\" responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>Картинка</th>\r\n                                <th>Имя</th>\r\n                                <th>Email</th>\r\n                                <th>Рол</th>\r\n                                <th>Действия</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {post\r\n                                ?.filter((val) => {\r\n                                    if (!searchPost === null) {\r\n                                        return val\r\n                                    } else if (\r\n                                        val.name\r\n                                            ?.toLowerCase()\r\n                                            .includes(\r\n                                                searchPost.toLowerCase()\r\n                                            ) ||\r\n                                        val.text\r\n                                            ?.toLowerCase()\r\n                                            .includes(searchPost.toLowerCase())\r\n                                    ) {\r\n                                        return val\r\n                                    }\r\n                                })\r\n                                .map((el, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <th>\r\n                                                {(pagePost - 1) * 6 +\r\n                                                    (index + 1)}\r\n                                            </th>\r\n                                            <td className=\"p-1\">\r\n                                                <ul className=\"list-unstyled users-list m-0 d-flex\">\r\n                                                    <li className=\"avatar pull-up\">\r\n                                                        <img\r\n                                                            src={el.image}\r\n                                                            alt=\"avatar\"\r\n                                                            height=\"30\"\r\n                                                            width=\"30\"\r\n                                                            id={\r\n                                                                'avatar' + el.id\r\n                                                            }\r\n                                                        />\r\n                                                        <UncontrolledTooltip\r\n                                                            placement=\"bottom\"\r\n                                                            target={\r\n                                                                'avatar' + el.id\r\n                                                            }\r\n                                                        >\r\n                                                            {el.name}\r\n                                                        </UncontrolledTooltip>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </td>\r\n                                            <td>{el.name}</td>\r\n                                            <td>{el.email}</td>\r\n                                            <td>{el.status}</td>\r\n                                            <td>\r\n                                                <div className=\"d-flex\">\r\n                                                    <Icon.Edit\r\n                                                        size={20}\r\n                                                        outline\r\n                                                        id=\"positionTop\"\r\n                                                        onClick={() => {\r\n                                                            setModalEdit(true)\r\n                                                            setUser(el)\r\n                                                        }}\r\n                                                    />\r\n                                                    <UncontrolledTooltip\r\n                                                        placement=\"top\"\r\n                                                        target=\"positionTop\"\r\n                                                    >\r\n                                                        Изменить\r\n                                                    </UncontrolledTooltip>\r\n                                                    <Icon.Trash2\r\n                                                        size={20}\r\n                                                        className=\"ml-2\"\r\n                                                        outline\r\n                                                        id=\"positionBottom\"\r\n                                                        onClick={() => {\r\n                                                            setModal(true)\r\n                                                            setIdNews(el.id)\r\n                                                        }}\r\n                                                    />\r\n                                                    <UncontrolledTooltip\r\n                                                        placement=\"bottom\"\r\n                                                        target=\"positionBottom\"\r\n                                                    >\r\n                                                        Удалить\r\n                                                    </UncontrolledTooltip>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate\r\n                        total={pagTotal}\r\n                        currentPage={pagePost}\r\n                        onChangeCurrentPage={onUpdateCurrentPage}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../breadCrumbs/BreadCrumb\"\nimport DataTableCustom from \"./DataTableCustom\"\n\nclass DataTables extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Пользователи\"\n          breadCrumbParent=\"Главный\"\n          breadCrumbActive=\"Пользователи\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <DataTableCustom />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default DataTables\n","import React from 'react'\nimport Main from '../../components/@vuexy/users/tables/data-tables/DataTables'\n\nexport default function Users() {\n    return (\n        <>\n            <Main />\n        </>\n    )\n}\n"],"sourceRoot":""}